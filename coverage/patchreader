#!/usr/bin/python
#
# Copyright (c) rPath, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#


import os
import sys

fileDict = {}

baseDir = os.getcwd()
extraDirs = 0

for item in sys.argv[1:]:
    if item.startswith('-p'):
        extraDirs = True
    else:
        baseDir = item

baseDir = os.path.realpath(baseDir)

newFile = None
for line in sys.stdin.readlines():
    if line.startswith('---'):
        oldFile = line.split()[1]
    elif line.startswith('+++'):
        newFile = line.split()[1]
        if extraDirs:
            while not os.path.exists(os.path.join(baseDir, newFile)):
                newFile = os.path.sep.join(newFile.split(os.path.sep)[1:])
        newFile = os.path.join(baseDir, newFile)

        fileDict.setdefault(newFile, [])
    elif line.startswith('@@'):
        curLine = int(line.split()[2].split(',')[0][1:])
    elif line.startswith('+'):
        fileDict[newFile].append(curLine)
        curLine += 1
    elif line.startswith('-'):
        continue
    elif newFile:
        curLine += 1

for file in sorted(fileDict):
    print file
    print ' '.join(str(x) for x in sorted(fileDict[file]))
